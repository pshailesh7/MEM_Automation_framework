<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="12" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-26T19:13:30 IST" name="MemTestAutomtion" finished-at="2024-02-26T19:14:43 IST" duration-ms="72902">
    <groups>
    </groups>
    <test started-at="2024-02-26T19:13:30 IST" name="MEMTest" finished-at="2024-02-26T19:14:43 IST" duration-ms="72902">
      <class name="mem.qa.testScripts.MemSettingPageTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:26 IST" name="setup" finished-at="2024-02-26T19:14:26 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkPageTitleTest()[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:26 IST" name="checkPageTitleTest" finished-at="2024-02-26T19:14:30 IST" duration-ms="4570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPageTitleTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPageTitleTest status=SUCCESS method=MemSettingPageTest.checkPageTitleTest()[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkPageHeadingTest()[pri:1, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="checkPageHeadingTest" finished-at="2024-02-26T19:14:30 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPageHeadingTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkPageHeadingTest status=SUCCESS method=MemSettingPageTest.checkPageHeadingTest()[pri:1, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkShopNameTest()[pri:2, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="checkShopNameTest" finished-at="2024-02-26T19:14:30 IST" duration-ms="53" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkShopNameTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkShopNameTest status=SUCCESS method=MemSettingPageTest.checkShopNameTest()[pri:2, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkShopURLTest()[pri:3, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="checkShopURLTest" finished-at="2024-02-26T19:14:30 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkShopURLTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkShopURLTest status=SUCCESS method=MemSettingPageTest.checkShopURLTest()[pri:3, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkShopEmailTest()[pri:4, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="checkShopEmailTest" finished-at="2024-02-26T19:14:30 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkShopEmailTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkShopEmailTest status=SUCCESS method=MemSettingPageTest.checkShopEmailTest()[pri:4, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkShopifyPlanTest()[pri:5, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="checkShopifyPlanTest" finished-at="2024-02-26T19:14:30 IST" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkShopifyPlanTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkShopifyPlanTest status=SUCCESS method=MemSettingPageTest.checkShopifyPlanTest()[pri:5, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkSignOutBtnTest()[pri:6, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:30 IST" name="checkSignOutBtnTest" finished-at="2024-02-26T19:14:31 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSignOutBtnTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:31 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSignOutBtnTest status=SUCCESS method=MemSettingPageTest.checkSignOutBtnTest()[pri:6, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkTitleGlobalPricinTest()[pri:7, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:31 IST" name="checkTitleGlobalPricinTest" finished-at="2024-02-26T19:14:31 IST" duration-ms="240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTitleGlobalPricinTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:31 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTitleGlobalPricinTest status=SUCCESS method=MemSettingPageTest.checkTitleGlobalPricinTest()[pri:7, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkSaveBtnTest()[pri:8, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:31 IST" name="checkSaveBtnTest" finished-at="2024-02-26T19:14:34 IST" duration-ms="3369" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Pricing updated successfully] but found [Something went wrong while updating the pricing rules]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Pricing updated successfully] but found [Something went wrong while updating the pricing rules]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at mem.qa.testScripts.MemSettingPageTest.checkSaveBtnTest(MemSettingPageTest.java:79)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSaveBtnTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:34 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:35 IST" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSaveBtnTest status=FAILURE method=MemSettingPageTest.checkSaveBtnTest()[pri:8, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkSaveAndUpdateTest()[pri:9, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:35 IST" name="checkSaveAndUpdateTest" finished-at="2024-02-26T19:14:36 IST" duration-ms="1372" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Pricing rules update in progress.] but found [Something went wrong while updating the pricing rules]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Pricing rules update in progress.] but found [Something went wrong while updating the pricing rules]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at mem.qa.testScripts.MemSettingPageTest.checkSaveAndUpdateTest(MemSettingPageTest.java:84)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSaveAndUpdateTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:36 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:36 IST" duration-ms="308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkSaveAndUpdateTest status=FAILURE method=MemSettingPageTest.checkSaveAndUpdateTest()[pri:9, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkVisibilityBtnTest()[pri:10, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:36 IST" name="checkVisibilityBtnTest" finished-at="2024-02-26T19:14:42 IST" duration-ms="5721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkVisibilityBtnTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:42 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkVisibilityBtnTest status=SUCCESS method=MemSettingPageTest.checkVisibilityBtnTest()[pri:10, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:mem.qa.testScripts.MemSettingPageTest@6dc17b83]" started-at="2024-02-26T19:14:42 IST" name="teardown" finished-at="2024-02-26T19:14:43 IST" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- mem.qa.testScripts.MemSettingPageTest -->
      <class name="mem.qa.testScripts.LoginPage1Test">
        <test-method is-config="true" signature="setup()[pri:0, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a]" started-at="2024-02-26T19:13:30 IST" name="setup" finished-at="2024-02-26T19:13:52 IST" duration-ms="21874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkTitleTest()[pri:0, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a]" started-at="2024-02-26T19:13:52 IST" name="checkTitleTest" finished-at="2024-02-26T19:13:52 IST" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTitleTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a]" started-at="2024-02-26T19:13:52 IST" name="takeScreenshot" finished-at="2024-02-26T19:13:52 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTitleTest status=SUCCESS method=LoginPage1Test.checkTitleTest()[pri:0, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkLoginTest()[pri:1, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a]" started-at="2024-02-26T19:13:52 IST" name="checkLoginTest" finished-at="2024-02-26T19:14:13 IST" duration-ms="21267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLoginTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a]" started-at="2024-02-26T19:14:13 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginTest status=SUCCESS method=LoginPage1Test.checkLoginTest()[pri:1, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkselectStore()[pri:2, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a]" started-at="2024-02-26T19:14:13 IST" name="checkselectStore" finished-at="2024-02-26T19:14:26 IST" duration-ms="12259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkselectStore -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a]" started-at="2024-02-26T19:14:26 IST" name="takeScreenshot" finished-at="2024-02-26T19:14:26 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkselectStore status=SUCCESS method=LoginPage1Test.checkselectStore()[pri:2, instance:mem.qa.testScripts.LoginPage1Test@42e99e4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- mem.qa.testScripts.LoginPage1Test -->
    </test> <!-- MEMTest -->
  </suite> <!-- MemTestAutomtion -->
</testng-results>
