<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-15T18:58:31 IST" name="MemTestAutomtion" finished-at="2024-03-15T18:59:24 IST" duration-ms="53533">
    <groups>
    </groups>
    <test started-at="2024-03-15T18:58:31 IST" name="MEMTest" finished-at="2024-03-15T18:59:24 IST" duration-ms="53533">
      <class name="mem.qa.testScripts.LoginPage1Test">
        <test-method is-config="true" signature="setup()[pri:0, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3]" started-at="2024-03-15T18:58:31 IST" name="setup" finished-at="2024-03-15T18:58:39 IST" duration-ms="8227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkTitleTest()[pri:0, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3]" started-at="2024-03-15T18:58:39 IST" name="checkTitleTest" finished-at="2024-03-15T18:58:39 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkTitleTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3]" started-at="2024-03-15T18:58:39 IST" name="takeScreenshot" finished-at="2024-03-15T18:58:39 IST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkTitleTest status=SUCCESS method=LoginPage1Test.checkTitleTest()[pri:0, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkLoginTest()[pri:1, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3]" started-at="2024-03-15T18:58:39 IST" name="checkLoginTest" finished-at="2024-03-15T18:58:50 IST" duration-ms="11190" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLoginTest -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3]" started-at="2024-03-15T18:58:50 IST" name="takeScreenshot" finished-at="2024-03-15T18:58:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkLoginTest status=SUCCESS method=LoginPage1Test.checkLoginTest()[pri:1, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="checkselectStore()[pri:2, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3]" started-at="2024-03-15T18:58:50 IST" name="checkselectStore" finished-at="2024-03-15T18:59:02 IST" duration-ms="11373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkselectStore -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3]" started-at="2024-03-15T18:59:02 IST" name="takeScreenshot" finished-at="2024-03-15T18:59:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkselectStore status=SUCCESS method=LoginPage1Test.checkselectStore()[pri:2, instance:mem.qa.testScripts.LoginPage1Test@dbf57b3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
      </class> <!-- mem.qa.testScripts.LoginPage1Test -->
      <class name="mem.qa.testScripts.Mem_Product_Details_Page_Test">
        <test-method is-config="true" signature="setup()[pri:0, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:02 IST" name="setup" finished-at="2024-03-15T18:59:02 IST" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="check_Page_Title_Test()[pri:0, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:02 IST" name="check_Page_Title_Test" finished-at="2024-03-15T18:59:23 IST" duration-ms="21252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_Page_Title_Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:23 IST" name="takeScreenshot" finished-at="2024-03-15T18:59:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=check_Page_Title_Test status=SUCCESS method=Mem_Product_Details_Page_Test.check_Page_Title_Test()[pri:0, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="check_Product_Title_Test()[pri:1, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:23 IST" name="check_Product_Title_Test" finished-at="2024-03-15T18:59:24 IST" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_Product_Title_Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:24 IST" name="takeScreenshot" finished-at="2024-03-15T18:59:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=check_Product_Title_Test status=SUCCESS method=Mem_Product_Details_Page_Test.check_Product_Title_Test()[pri:1, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="check_Price_Label_Test()[pri:2, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:24 IST" name="check_Price_Label_Test" finished-at="2024-03-15T18:59:24 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_Price_Label_Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:24 IST" name="takeScreenshot" finished-at="2024-03-15T18:59:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=check_Price_Label_Test status=SUCCESS method=Mem_Product_Details_Page_Test.check_Price_Label_Test()[pri:2, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method signature="check_Color_Slection_Test()[pri:3, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:24 IST" name="check_Color_Slection_Test" finished-at="2024-03-15T18:59:24 IST" duration-ms="213" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at mem.qa.testScripts.Mem_Product_Details_Page_Test.check_Color_Slection_Test(Mem_Product_Details_Page_Test.java:60)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_Color_Slection_Test -->
        <test-method is-config="true" signature="takeScreenshot(org.testng.ITestResult)[pri:0, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:24 IST" name="takeScreenshot" finished-at="2024-03-15T18:59:24 IST" duration-ms="285" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=check_Color_Slection_Test status=FAILURE method=Mem_Product_Details_Page_Test.check_Color_Slection_Test()[pri:3, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshot -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:mem.qa.testScripts.Mem_Product_Details_Page_Test@52e6fdee]" started-at="2024-03-15T18:59:24 IST" name="teardown" finished-at="2024-03-15T18:59:24 IST" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- mem.qa.testScripts.Mem_Product_Details_Page_Test -->
    </test> <!-- MEMTest -->
  </suite> <!-- MemTestAutomtion -->
</testng-results>
